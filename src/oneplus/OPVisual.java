/**
 * Tool OP
 * 
 * @author (Franco Mato) 
 * @version (1.0)
 * 
 * Changelog
 * 1.0
 * Inicio
 * 
 */

package oneplus;

import java.awt.Cursor;
import java.awt.Desktop;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.ProcessBuilder.Redirect;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.URL;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;
import javax.swing.JFrame;
import java.io.File;
import java.io.InputStream;
import javax.swing.ImageIcon;

/**
 *
 * @author Franco
 */
public class OPVisual extends javax.swing.JFrame {

    /**
     * Creates new form OPVisual
     */
    public OPVisual() {
        initComponents();
    }

       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem16 = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem17 = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OnePlus Tool - BETA Es");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/unlocked.png"))); // NOI18N
        jButton1.setText("Desbloquear Bootloader");
        jButton1.setToolTipText("Desbloquea bootloader del télefono, esto eliminara todos sus datos");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/locked.png"))); // NOI18N
        jButton2.setText("Bloquear Bootloader");
        jButton2.setToolTipText("Bloquea bootloader del télefono, esto eliminara todos sus datos");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/flash.png"))); // NOI18N
        jButton3.setText("Flashear TWRP");
        jButton3.setToolTipText("Flashea Recovery personalizado");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/flash.png"))); // NOI18N
        jButton4.setText("Flashear TWRP OxygenOS");
        jButton4.setToolTipText("Flashea Recovery Stock");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/bootl.png"))); // NOI18N
        jLabel1.setText("Bootloader");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/recov.png"))); // NOI18N
        jLabel2.setText("Recovery");

        jButton5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/rebooto.png"))); // NOI18N
        jButton5.setText("Reiniciar Bootloader");
        jButton5.setToolTipText("Reinicia al modo bootloader");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/rebooto.png"))); // NOI18N
        jButton6.setText("Reiniciar Recovery");
        jButton6.setToolTipText("Reinicia al modo Recovery");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setEditable(false);
        jFormattedTextField1.setForeground(new java.awt.Color(204, 51, 0));
        jFormattedTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFormattedTextField1.setCaretColor(new java.awt.Color(255, 0, 0));
        jFormattedTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        jFormattedTextField1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/reboot.png"))); // NOI18N
        jLabel3.setText("Reinicio");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/depurar.png"))); // NOI18N
        jLabel4.setText("Consola depuradora");

        jButton7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/ok16.png"))); // NOI18N
        jButton7.setText("Verificar Modo Bootloader");
        jButton7.setToolTipText("Verifica el modo bootloader con adb ");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/ok16.png"))); // NOI18N
        jButton8.setText("Verificar fastboot devices");
        jButton8.setToolTipText("Verifica si el teléfono esta conectado con fastboot");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/logo.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/check.png"))); // NOI18N
        jLabel6.setText("Verificar");

        jMenuBar2.setToolTipText("Barra de tareas");
        jMenuBar2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/open.png"))); // NOI18N
        jMenu1.setText("Archivo");
        jMenu1.setToolTipText("Menu archivos");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/open16.png"))); // NOI18N
        jMenuItem4.setText("Abrir adb");
        jMenuItem4.setToolTipText("Se abrirá la carpeta que contiene los archivos adb&fastboot");
        jMenuItem4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator1);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/open16.png"))); // NOI18N
        jMenuItem1.setText("Abrir carpeta img");
        jMenuItem1.setToolTipText("Se abrirá la carpeta que contiene las imágenes");
        jMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator7);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/open16.png"))); // NOI18N
        jMenu6.setText("Abrir sub carpetas");
        jMenu6.setToolTipText("Abre las carpetas dentro de img");
        jMenu6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/rebooto.png"))); // NOI18N
        jMenuItem12.setText("TWRP");
        jMenuItem12.setToolTipText("Esta carpeta contiene la imagen del recovery twrp oficial");
        jMenuItem12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem12);

        jMenuItem13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/depurar.png"))); // NOI18N
        jMenuItem13.setText("Firmware");
        jMenuItem13.setToolTipText("Esta carpeta contiene OxygenOS 9.0.8");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem13);

        jMenuItem14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/recov.png"))); // NOI18N
        jMenuItem14.setText("Recovery");
        jMenuItem14.setToolTipText("Esta carpeta contiene el Recovery TWRP pero para flashear el firmware OxygenOS");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem14);

        jMenu1.add(jMenu6);

        jMenuBar2.add(jMenu1);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/flashb.png"))); // NOI18N
        jMenu3.setText("Flash");
        jMenu3.setToolTipText("Menu Flash ");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jMenuItem9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/edit_add16.png"))); // NOI18N
        jMenuItem9.setText("Flashear Firmware Stock");
        jMenuItem9.setToolTipText("Esto abrirá el menú para flashear el firmware Stock");
        jMenuItem9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jSeparator5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenu3.add(jSeparator5);

        jMenuItem10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/download.png"))); // NOI18N
        jMenuItem10.setText("Descargar última OxygenOS One Plus 5");
        jMenuItem10.setToolTipText("Descargue el último firmware OP5");
        jMenuItem10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar2.add(jMenu3);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/build.png"))); // NOI18N
        jMenu2.setText("Otros");
        jMenu2.setToolTipText("Menu terminal");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/button_ok.png"))); // NOI18N
        jMenuItem6.setText("Reiniciar Tool");
        jMenuItem6.setToolTipText("Se reiniciara el Tool de manera pasiva");
        jMenuItem6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);
        jMenu2.add(jSeparator3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/java.png"))); // NOI18N
        jMenuItem5.setText("Terminar proceso Java");
        jMenuItem5.setToolTipText("Se cerrara por completo Java (Mata el proceso)");
        jMenuItem5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);
        jMenu2.add(jSeparator4);

        jMenuItem16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem16.setForeground(new java.awt.Color(204, 102, 0));
        jMenuItem16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/cancel16.png"))); // NOI18N
        jMenuItem16.setText("Terminar todos los procesos ");
        jMenuItem16.setToolTipText("Cerrara por completo el programa y sus subprogramas abiertos");
        jMenuItem16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem16);
        jMenu2.add(jSeparator9);

        jMenu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/tool.png"))); // NOI18N
        jMenu7.setText("Otros Tool");
        jMenu7.setToolTipText("Tools extras para diferentes dispositivos");
        jMenu7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/mi.png"))); // NOI18N
        jMenuItem15.setText("Xiaomi MI A2/6X Tool");
        jMenuItem15.setToolTipText("Xiaomi Tool Beta");
        jMenuItem15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem15);

        jMenu2.add(jMenu7);
        jMenu2.add(jSeparator8);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/len.png"))); // NOI18N
        jMenu5.setText("Idioma");
        jMenu5.setToolTipText("Seleccione un idioma");
        jMenu5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/english.png"))); // NOI18N
        jMenuItem7.setText("English");
        jMenuItem7.setToolTipText("English lang");
        jMenuItem7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/spanish-language.png"))); // NOI18N
        jMenuItem8.setText("Español");
        jMenuItem8.setToolTipText("Idioma Español ");
        jMenuItem8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem8);

        jMenu2.add(jMenu5);

        jMenuBar2.add(jMenu2);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/info.png"))); // NOI18N
        jMenu4.setText("Ayuda");
        jMenu4.setToolTipText("Menú ayuda");
        jMenu4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu4.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/new16.png"))); // NOI18N
        jMenuItem2.setText("Changelog");
        jMenuItem2.setToolTipText("Registros de cambios");
        jMenuItem2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);
        jMenu4.add(jSeparator2);

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/new16.png"))); // NOI18N
        jMenuItem3.setText("Créditos");
        jMenuItem3.setToolTipText("Créditos de autor y compañeros");
        jMenuItem3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);
        jMenu4.add(jSeparator6);

        jMenuItem17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/new16.png"))); // NOI18N
        jMenuItem17.setText("Licencia");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem17);
        jMenu4.add(jSeparator10);

        jMenuItem11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oneplus/images/bug.png"))); // NOI18N
        jMenuItem11.setText("Bugs");
        jMenuItem11.setToolTipText("Errores que se registran en el programa");
        jMenuItem11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("Tool for OP");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    this.setIconImage(new ImageIcon(getClass().getResource("Icon.png")).getImage());

    jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
    
        Socket sock= new Socket();
        InetSocketAddress addr=new InetSocketAddress("www.google.com",80);
        try {
        sock.connect(addr,3000);
        
        File f = new File("C:\\adb\\adb.exe"); 
        
        if (!f.exists() == true){
        jFormattedTextField1.setText("Descargando adb & fastboot...");
        JOptionPane.showMessageDialog(null,"Error: No se pudo encontrar los archivos adb & fastboot \n\n El archivo se instalará en C:\\adb");
        final JProgressBar jProgressBar = new JProgressBar();
        jProgressBar.setMaximum(100000);
        jProgressBar.setCursor (Cursor.getPredefinedCursor (Cursor.WAIT_CURSOR));
        jProgressBar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jProgressBar.setBorderPainted(false);
        jProgressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jProgressBar.setStringPainted(true);
        jProgressBar.setString("Iniciando...");
        JFrame frame = new JFrame("Descargando adb & fastboot...");
        frame.setContentPane(jProgressBar);
        frame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        frame.setSize(600, 100);
        frame.setVisible(true);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        Runnable updatethread;
            updatethread = () -> {
            try {
                URL url = new URL("https://bitbucket.org/Franco28/flashtool-motorola-moto-g5-g5plus/downloads/adb.zip");
                HttpURLConnection httpConnection = (HttpURLConnection) (url.openConnection());
                long completeFileSize = httpConnection.getContentLength();
                try (final java.io.BufferedInputStream in = new java.io.BufferedInputStream(httpConnection.getInputStream())) {
                    java.io.FileOutputStream fos = new java.io.FileOutputStream("C:\\adb\\adb.zip");
                    try (final java.io.BufferedOutputStream bout = new BufferedOutputStream(fos, 1024)) {
                        byte[] data = new byte[1024];
                        long downloadedFileSize = 0;
                        int x1 = 0;
                        while ((x1 = in.read(data, 0, 1024)) >= 0) {
                            downloadedFileSize += x1;
                            // calculate progress
                            final int currentProgress = (int) ((((double)downloadedFileSize) / ((double)completeFileSize)) * 100000d);
                            // update progress bar
                            jProgressBar.setString("Calculando tamaño del archivo...");
                            SwingUtilities.invokeLater(() -> {
                                jProgressBar.setString("Descargando adb & fastboot: \n" +currentProgress+ " Bytes");
                                jProgressBar.setValue(currentProgress);
                            });
                            bout.write(data, 0, x1);
                        }
                    }
        frame.setVisible(false);
        File adb = new File("C:\\adb\\adb.zip"); 
        String zipFilePath = "C:\\adb\\adb.zip";
        String destDirectory = "C:\\adb";
        UnzipUtility unzipper = new UnzipUtility();
        try {
            unzipper.unzip(zipFilePath, destDirectory);
        } catch (IOException ex) {
                // some errors occurred
        }
            adb.delete();
            dispose();//To close the current window
            String path = "Tool.exe";
            File file = new File(path);
            Process t = Runtime.getRuntime().exec(file.getAbsolutePath());
 
    }
            }catch (FileNotFoundException e) {
            }catch (IOException ex) {
                Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
            }
        };
        new Thread(updatethread).start(); 
 }
           
        }catch (IOException e) {

        jFormattedTextField1.setText("Error no se pudo establecer conexion con el servidor.");
       
        }finally{
            try { 
            sock.close(); 
        }catch (IOException e) { 
            }
        } 

        File f = new File("img"); 
        if (!f.exists() == true){
// Create a directory; all non-existent ancestor directories are
// automatically created
 try{
  String strDirectoy ="img";
  String strManyDirectories="img/firmware";

  // Create one directory
  boolean success = (
  new File(strDirectoy)).mkdir();
  if (success) {
  jFormattedTextField1.setText("Directorio: " + strManyDirectories + " creado...");    
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }  
  // Create multiple directories
  success = (new File(strManyDirectories)).mkdirs();
  if (success) {
  jFormattedTextField1.setText("Directorios: " + strManyDirectories + " creado...");  
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }

  }catch (IllegalArgumentException e){//Catch exception if any
  jFormattedTextField1.setText("Error: " + e.getMessage());     
  }
}
        
        File bl = new File("img/bootloader"); 
        if (!bl.exists() == true){
// Create a directory; all non-existent ancestor directories are
// automatically created
 try{
  String strDirectoy ="img";
  String strManyDirectories="img/bootloader";

  // Create one directory
  boolean success = (
  new File(strDirectoy)).mkdir();
  if (success) {
  jFormattedTextField1.setText("Directorio: " + strManyDirectories + " creado...");    
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }  
  // Create multiple directories
  success = (new File(strManyDirectories)).mkdirs();
  if (success) {
  jFormattedTextField1.setText("Directorios: " + strManyDirectories + " creado...");  
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }

  }catch (IllegalArgumentException e){//Catch exception if any
  jFormattedTextField1.setText("Error: " + e.getMessage());     
  }
}
        
    File r = new File("img/recovery"); 
    if (!r.exists() == true){
 // Create a directory; all non-existent ancestor directories are
// automatically created
 try{
  String strDirectoy ="img";
  String strManyDirectories="img/recovery";

  // Create one directory
  boolean success = (
  new File(strDirectoy)).mkdir();
  if (success) {
  jFormattedTextField1.setText("Directorio: " + strManyDirectories + " creado...");    
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }  
  // Create multiple directories
  success = (new File(strManyDirectories)).mkdirs();
  if (success) {
  jFormattedTextField1.setText("Directorios: " + strManyDirectories + " creado...");  
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }
  }catch (IllegalArgumentException e){//Catch exception if any
  jFormattedTextField1.setText("Error: " + e.getMessage());     
  }
}

        File tr = new File("img/twrp"); 
        if (!tr.exists() == true){    
 // Create a directory; all non-existent ancestor directories are
// automatically created
 try{
  String strDirectoy ="img";
  String strManyDirectories="img/twrp";

  // Create one directory
  boolean success = (
  new File(strDirectoy)).mkdir();
  if (success) {
  jFormattedTextField1.setText("Directorio: " + strManyDirectories + " creado...");   
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }  
  // Create multiple directories
  success = (new File(strManyDirectories)).mkdirs();
  if (success) {
  jFormattedTextField1.setText("Directorios: " + strManyDirectories + " creado...");  
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }

  }catch (IllegalArgumentException e){//Catch exception if any
  jFormattedTextField1.setText("Error: " + e.getMessage());     
  }
}
        File adb = new File("C:\\adb"); 
        if (!adb.exists() == true){
  try{
  String strDirectoy ="C:\\adb";
  String strManyDirectories="C:\\adb";

  // Create one directory
  boolean success = (
  new File(strDirectoy)).mkdir();
  if (success) {
  jFormattedTextField1.setText("Directorio: " + strManyDirectories + " creado...");  
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }  
  // Create multiple directories
  success = (new File(strManyDirectories)).mkdirs();
  if (success) {
  jFormattedTextField1.setText("Directorios: " + strManyDirectories + " creado...");     
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }
  }catch (IllegalArgumentException e){//Catch exception if any
  jFormattedTextField1.setText("Error: " + e.getMessage());     
  }
}

    File se = new File(".settings"); 
    if (!se.exists() == true){
  try{
  String strDirectoy =".settings";
  String strManyDirectories=".settings";

  // Create one directory
  boolean success = (
  new File(strDirectoy)).mkdir();
  if (success) {
  jFormattedTextField1.setText("Directorio: " + strManyDirectories + " creado...");  
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }  
  // Create multiple directories
  success = (new File(strManyDirectories)).mkdirs();
  if (success) {
  jFormattedTextField1.setText("Directorios: " + strManyDirectories + " creado...");    
  jFormattedTextField1.setText("Bienvendio a OnePlus Tool");
  }

  }catch (IllegalArgumentException e){//Catch exception if any
  jFormattedTextField1.setText("Error: " + e.getMessage());     
  }
    }
  
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
    int reply = JOptionPane.showConfirmDialog(null, "Este proceso eliminara toda su memoria interna, realizar backup antes de continuar", "Cuidado! Desea continuar?", JOptionPane.YES_NO_OPTION);
    JOptionPane.showMessageDialog(null,"Por favor activa las opciones de desarrollador y activa: \n\n - Desbloqueo OEM \n\n - Depuración por USB");
    if (reply == JOptionPane.YES_OPTION) {     
   Runtime runtime = Runtime.getRuntime();
try {
    Process p1 = runtime.exec("cmd /c start img\\bootloader\\unlock.bat");
    InputStream is = p1.getInputStream();
    int i = 0;
    while( (i = is.read() ) != -1) {
       JOptionPane.showMessageDialog(null, +i);
    }
} catch(IOException ioException) {
    JOptionPane.showMessageDialog(null, ioException.getMessage());
}       
        }else {
           JOptionPane.showMessageDialog(null, "Proceso cancelado");
              dispose();//To close the current window
              new OPVisual().setVisible(true);  
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Socket sock= new Socket();
        InetSocketAddress addr=new InetSocketAddress("www.google.com",80);
        try {
        sock.connect(addr,3000);       
        
        File f = new File("img/twrp/twrp-3.3.1-0-cheeseburger.img"); 
        
        if(!f.exists()){
        jFormattedTextField1.setText("Descargando TWRP Oficial Cheeseburger...");
        JOptionPane.showMessageDialog(null,"Error: No se pudo encontrar TWRP Para Flashear Stock OxygenOS");
        final JProgressBar jProgressBar = new JProgressBar();
        jProgressBar.setMaximum(100000);
        jProgressBar.setCursor (Cursor.getPredefinedCursor (Cursor.WAIT_CURSOR));
        jProgressBar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jProgressBar.setBorderPainted(false);
        jProgressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jProgressBar.setStringPainted(true);
        jProgressBar.setString("Iniciando...");
        JFrame frame = new JFrame("Descargando TWRP Oficial Cheeseburger...");
        frame.setContentPane(jProgressBar);
        frame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        frame.setSize(600, 100);
        frame.setVisible(true);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        Runnable updatethread;
            updatethread = () -> {
            try {
                URL url = new URL("https://dl.twrp.me/cheeseburger/twrp-3.3.1-0-cheeseburger.img");
                HttpURLConnection httpConnection = (HttpURLConnection) (url.openConnection());
                long completeFileSize = httpConnection.getContentLength();
                try (final java.io.BufferedInputStream in = new java.io.BufferedInputStream(httpConnection.getInputStream())) {
                    java.io.FileOutputStream fos = new java.io.FileOutputStream("img/twrp/twrp-3.3.1-0-cheeseburger.img");
                    try (final java.io.BufferedOutputStream bout = new BufferedOutputStream(fos, 1024)) {
                        byte[] data = new byte[1024];
                        long downloadedFileSize = 0;
                        int x1 = 0;
                        while ((x1 = in.read(data, 0, 1024)) >= 0) {
                            downloadedFileSize += x1;
                            // calculate progress
                            final int currentProgress = (int) ((((double)downloadedFileSize) / ((double)completeFileSize)) * 100000d);
                            // update progress bar
                            jProgressBar.setString("Calculando tamaño del archivo...");
                            SwingUtilities.invokeLater(() -> {
                                jProgressBar.setString("Descargando TWRP Oficial Cheeseburger: \n" +currentProgress+ " Bytes");
                                jProgressBar.setValue(currentProgress);
                            });
                            bout.write(data, 0, x1);
                        }
                    }
                    frame.setVisible(false);
                }
            }catch (FileNotFoundException e) {
            }catch (IOException ex) {
                Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
            }
        };
        new Thread(updatethread).start();
    
 }
           
        }catch (IOException e) {

        jProgressBar.setString("Error no se pudo establecer conexion con el servidor.");
        jFormattedTextField1.setText("Error no se pudo establecer conexion con el servidor.");
       
        }finally{
            try { 
            sock.close(); 
        }catch (IOException e) { 
            }
        } 
        
    File f = new File("img/twrp/twrp-3.3.1-0-cheeseburger.img");
   
    if(f.exists() == true){
   Runtime runtime = Runtime.getRuntime();
try {
    Process p1 = runtime.exec("cmd /c start img\\twrp\\twrp.bat");
    InputStream is = p1.getInputStream();
    int i = 0;
    while( (i = is.read() ) != -1) {
       JOptionPane.showMessageDialog(null, +i);
    }
} catch(IOException ioException) {
    JOptionPane.showMessageDialog(null, ioException.getMessage());
}
  }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            ProcessBuilder pb =
                    new ProcessBuilder("adb", "reboot", "bootloader");
        try {
            Map<String, String> env = pb.environment();
            env.put("VAR1", "myValue");
            env.remove("OTHERVAR");
            env.put("VAR2", env.get("VAR1") + "suffix");
            pb.directory(new File("adb/"));
            File log = new File(".settings/log");
            pb.redirectErrorStream(true);
            pb.redirectOutput(Redirect.appendTo(log));
            Process p = pb.start();
            if (p != pb.start()){
              JOptionPane.showMessageDialog(null,"Error:  " +pb.start()+ "\n\n Conecta el dispositivo");
              dispose();//To close the current window
              String path = "Tool.exe";
              File file = new File(path);
              if (! file.exists()) {
              throw new IllegalArgumentException("El archivo " + path + " no existe");
              }
              Process t = Runtime.getRuntime().exec(file.getAbsolutePath());
            }
            assert pb.redirectInput() == Redirect.PIPE;
            assert pb.redirectOutput().file() == log;
            assert p.getInputStream().read() == -1; 
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " +ex);
        }              
        //Read LOG
 try {
                try (FileInputStream fstream = new FileInputStream("log")) {
                    BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
                    String strLine;
                    /* read log line by line */
                    while ((strLine = br.readLine()) != null)   {
                        /* parse strLine to obtain what you want */
                        jFormattedTextField1.setText(strLine);     
                    }            
                }
} catch (IOException e) {
     jFormattedTextField1.setText("Error: " +e.getMessage());    
     JOptionPane.showMessageDialog(null,"Error:  " +e.getMessage());
}
 //End Reading LOG when fail
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
                   ProcessBuilder pb =
                    new ProcessBuilder("adb", "devices");
        try {
            Map<String, String> env = pb.environment();
            env.put("VAR1", "myValue");
            env.remove("OTHERVAR");
            env.put("VAR2", env.get("VAR1") + "suffix");
            pb.directory(new File("adb/"));
            File log = new File(".settings/log");
            pb.redirectErrorStream(true);
            pb.redirectOutput(Redirect.appendTo(log));
            Process p = pb.start();
            if (p != pb.start()){
              JOptionPane.showMessageDialog(null,"Error:  " +pb.start()+ "\n\n Conecta el dispositivo");
              dispose();//To close the current window
              String path = "Tool.exe";
              File file = new File(path);
              if (! file.exists()) {
              throw new IllegalArgumentException("El archivo " + path + " no existe");
              }
              Process t = Runtime.getRuntime().exec(file.getAbsolutePath());
            }
            assert pb.redirectInput() == Redirect.PIPE;
            assert pb.redirectOutput().file() == log;
            assert p.getInputStream().read() == -1; 
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " +ex);
        }              
        //Read LOG
 try {
                try (FileInputStream fstream = new FileInputStream("log")) {
                    BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
                    String strLine;
                    /* read log line by line */
                    while ((strLine = br.readLine()) != null)   {
                        /* parse strLine to obtain what you want */
                        jFormattedTextField1.setText(strLine);     
                    }            
                }
} catch (IOException e) {
     jFormattedTextField1.setText("Error: " +e.getMessage());    
     JOptionPane.showMessageDialog(null,"Error:  " +e.getMessage());
}
 //End Reading LOG when fail
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
            ProcessBuilder pb =
                    new ProcessBuilder("adb", "reboot", "recovery");
        try {
            Map<String, String> env = pb.environment();
            env.put("VAR1", "myValue");
            env.remove("OTHERVAR");
            env.put("VAR2", env.get("VAR1") + "suffix");
            pb.directory(new File("adb/"));
            File log = new File(".settings/log");
            pb.redirectErrorStream(true);
            pb.redirectOutput(Redirect.appendTo(log));
            Process p = pb.start();
            if (p != pb.start()){
              JOptionPane.showMessageDialog(null,"Error:  " +pb.start()+ "\n\n Conecta el dispositivo");
              dispose();//To close the current window
              String path = "Tool.exe";
              File file = new File(path);
              if (! file.exists()) {
              throw new IllegalArgumentException("El archivo " + path + " no existe");
              }
              Process t = Runtime.getRuntime().exec(file.getAbsolutePath());
            }
            assert pb.redirectInput() == Redirect.PIPE;
            assert pb.redirectOutput().file() == log;
            assert p.getInputStream().read() == -1; 
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " +ex);
        }              
        //Read LOG
 try {
                try (FileInputStream fstream = new FileInputStream("log")) {
                    BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
                    String strLine;
                    /* read log line by line */
                    while ((strLine = br.readLine()) != null)   {
                        /* parse strLine to obtain what you want */
                        jFormattedTextField1.setText(strLine);     
                    }            
                }
} catch (IOException e) {
     jFormattedTextField1.setText("Error: " +e.getMessage());    
     JOptionPane.showMessageDialog(null,"Error:  " +e.getMessage());
}
 //End Reading LOG when fail
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
            ProcessBuilder pb =
                    new ProcessBuilder("fastboot", "devices");
        try {
            Map<String, String> env = pb.environment();
            env.put("VAR1", "myValue");
            env.remove("OTHERVAR");
            env.put("VAR2", env.get("VAR1") + "suffix");
            pb.directory(new File("adb/"));
            File log = new File(".settings/log");
            pb.redirectErrorStream(true);
            pb.redirectOutput(Redirect.appendTo(log));
            Process p = pb.start();
            if (p != pb.start()){
              JOptionPane.showMessageDialog(null,"Error:  " +pb.start()+ "\n\n Conecta el dispositivo");
              dispose();//To close the current window
              String path = "Tool.exe";
              File file = new File(path);
              if (! file.exists()) {
              throw new IllegalArgumentException("El archivo " + path + " no existe");
              }
              Process t = Runtime.getRuntime().exec(file.getAbsolutePath());
            }
            assert pb.redirectInput() == Redirect.PIPE;
            assert pb.redirectOutput().file() == log;
            assert p.getInputStream().read() == -1; 
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: " +ex);
        }              
        //Read LOG
 try {
                try (FileInputStream fstream = new FileInputStream("log")) {
                    BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
                    String strLine;
                    /* read log line by line */
                    while ((strLine = br.readLine()) != null)   {
                        /* parse strLine to obtain what you want */
                        jFormattedTextField1.setText(strLine);     
                    }            
                }
} catch (IOException e) {
     jFormattedTextField1.setText("Error: " +e.getMessage());    
     JOptionPane.showMessageDialog(null,"Error:  " +e.getMessage());
}
 //End Reading LOG when fail
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Socket sock= new Socket();
        InetSocketAddress addr=new InetSocketAddress("www.google.com",80);
        try {
        sock.connect(addr,3000);       
        
        File f = new File("img/recovery/twrp-3.3.1-0-20190713-codeworkx-cheeseburger.img"); 
        
        if(!f.exists()){
        jFormattedTextField1.setText("Descargando TWRP Para Flashear Stock OxygenOS...");
        JOptionPane.showMessageDialog(null,"Error: No se pudo encontrar TWRP Para Flashear Stock OxygenOS");
        final JProgressBar jProgressBar = new JProgressBar();
        jProgressBar.setMaximum(100000);
        jProgressBar.setCursor (Cursor.getPredefinedCursor (Cursor.WAIT_CURSOR));
        jProgressBar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jProgressBar.setBorderPainted(false);
        jProgressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jProgressBar.setStringPainted(true);
        jProgressBar.setString("Iniciando...");
        JFrame frame = new JFrame("Descargando TWRP Para Flashear Stock OxygenOS...");
        frame.setContentPane(jProgressBar);
        frame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        frame.setSize(600, 100);
        frame.setVisible(true);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        Runnable updatethread;
            updatethread = () -> {
            try {
                URL url = new URL("https://bitbucket.org/Franco28/flashtool-motorola-moto-g5-g5plus/downloads/twrp-3.3.1-0-20190713-codeworkx-cheeseburger.img");
                HttpURLConnection httpConnection = (HttpURLConnection) (url.openConnection());
                long completeFileSize = httpConnection.getContentLength();
                try (final java.io.BufferedInputStream in = new java.io.BufferedInputStream(httpConnection.getInputStream())) {
                    java.io.FileOutputStream fos = new java.io.FileOutputStream("img/recovery/twrp-3.3.1-0-20190713-codeworkx-cheeseburger.img");
                    try (final java.io.BufferedOutputStream bout = new BufferedOutputStream(fos, 1024)) {
                        byte[] data = new byte[1024];
                        long downloadedFileSize = 0;
                        int x1 = 0;
                        while ((x1 = in.read(data, 0, 1024)) >= 0) {
                            downloadedFileSize += x1;
                            // calculate progress
                            final int currentProgress = (int) ((((double)downloadedFileSize) / ((double)completeFileSize)) * 100000d);
                            // update progress bar
                            jProgressBar.setString("Calculando tamaño del archivo...");
                            SwingUtilities.invokeLater(() -> {
                                jProgressBar.setString("Descargando TWRP Para Flashear Stock OxygenOS: \n" +currentProgress+ " Bytes");
                                jProgressBar.setValue(currentProgress);
                            });
                            bout.write(data, 0, x1);
                        }
                    }
                    frame.setVisible(false);
                }
            }catch (FileNotFoundException e) {
            }catch (IOException ex) {
                Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
            }
        };
        new Thread(updatethread).start();
    
 }
    File of = new File("img/recovery/twrp-3.3.1-0-20190713-codeworkx-cheeseburger.img");
   
    if(of.exists() == true){
   Runtime runtime = Runtime.getRuntime();
try {
    Process p1 = runtime.exec("cmd /c start img\\recovery\\recovery.bat");
    InputStream is = p1.getInputStream();
    int i = 0;
    while( (i = is.read() ) != -1) {
       JOptionPane.showMessageDialog(null, +i);
    }
} catch(IOException ioException) {
    JOptionPane.showMessageDialog(null, ioException.getMessage());
}
  }
           
        }catch (IOException e) {
        
        jFormattedTextField1.setText("Error no se pudo establecer conexion con el servidor.");
       
        }finally{
            try { 
            sock.close(); 
        }catch (IOException e) { 
            }
        } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    int reply = JOptionPane.showConfirmDialog(null, "Este proceso eliminara toda su memoria interna, realizar backup antes de continuar", "Cuidado! Desea continuar?", JOptionPane.YES_NO_OPTION);
     
    if (reply == JOptionPane.YES_OPTION) {  
   Runtime runtime = Runtime.getRuntime();
try {
    Process p1 = runtime.exec("cmd /c start img\\bootloader\\lock.bat");
    InputStream is = p1.getInputStream();
    int i = 0;
    while( (i = is.read() ) != -1) {
       JOptionPane.showMessageDialog(null, +i);
    }
} catch(IOException ioException) {
    JOptionPane.showMessageDialog(null, ioException.getMessage());
}        
        }else {
           JOptionPane.showMessageDialog(null, "Proceso cancelado");
              dispose();//To close the current window
              new OPVisual().setVisible(true);  
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
try {
    Runtime.getRuntime().exec(new String[] { "c:\\Windows\\notepad.exe", ".settings\\others\\changelog.txt" });
} catch (IOException e) {
} 
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
              new credits().setVisible(true); 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {
            dirToOpen = new File("C:\\adb");
            desktop.open(dirToOpen);
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(null,"Error: Carpeta " +dirToOpen+ " no encontrada");
        } catch (IOException ex) {
            Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {
            dirToOpen = new File("img");
            desktop.open(dirToOpen);
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(null,"Error: Carpeta " +dirToOpen+ " no encontrada");
        } catch (IOException ex) {
            Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
              this.dispose();//To close the current window
              String path = "Tool.exe";
              File file = new File(path);
        try { 
            Process t = Runtime.getRuntime().exec(file.getAbsolutePath());
        } catch (IOException ex) {
            Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
Runtime runtime = Runtime.getRuntime();
try {
    Process p1 = runtime.exec("cmd /c start .settings\\bin\\killjava.bat");
    InputStream is = p1.getInputStream();
    int i = 0;
    while( (i = is.read() ) != -1) {
       JOptionPane.showMessageDialog(null, +i);
    }
} catch(IOException ioException) {
    JOptionPane.showMessageDialog(null, ioException.getMessage());
}
    System.exit(0);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        JOptionPane.showMessageDialog(null, "Error usted ya se encuentra en el Tool Español");     
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        JOptionPane.showMessageDialog(null, "Error English lang it´s not made yet...");     
        this.dispose();    
        new OPVisual().setVisible(true);            
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        JOptionPane.showMessageDialog(null, "Opción no disponible...");     
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Durante la descarga no podra utilziar el Tool! \n\n Para verificar la descarga se abrirá la carpeta", "Cuidado! Desea continuar?", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {       
        Socket sock= new Socket();
        InetSocketAddress addr=new InetSocketAddress("www.google.com",80);
        try {
        sock.connect(addr,3000);       
        
        File f = new File("img/firmware/OnePlus5Oxygen_23_OTA_051_all_1907311835_5de64c.zip"); 
        
        if(!f.exists()){
        jFormattedTextField1.setText("Descargando OnePlus5Oxygen_23_OTA_051_all_1907311835_5de64c...");
        JOptionPane.showMessageDialog(null,"Error: No se pudo encontrar el firmware");
        final JProgressBar jProgressBar = new JProgressBar();
        jProgressBar.setMaximum(100000);
        jProgressBar.setCursor (Cursor.getPredefinedCursor (Cursor.WAIT_CURSOR));
        jProgressBar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jProgressBar.setBorderPainted(false);
        jProgressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jProgressBar.setStringPainted(true);
        jProgressBar.setString("Iniciando...");
        JFrame frame = new JFrame("Descargando TWRP Oficial Cheeseburger...");
        frame.setContentPane(jProgressBar);
        frame.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        frame.setSize(600, 100);
        frame.setVisible(true);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        Runnable updatethread;
            updatethread = () -> {
            try {
                URL url = new URL("https://otafsg1.h2os.com/patch/amazone2/GLO/OnePlus5Oxygen/OnePlus5Oxygen_23.J.51_GLO_051_1907311835/OnePlus5Oxygen_23_OTA_051_all_1907311835_5de64c.zip");
                HttpURLConnection httpConnection = (HttpURLConnection) (url.openConnection());
                long completeFileSize = httpConnection.getContentLength();
                try (final java.io.BufferedInputStream in = new java.io.BufferedInputStream(httpConnection.getInputStream())) {
                    java.io.FileOutputStream fos = new java.io.FileOutputStream("img/firmware/OnePlus5Oxygen_23_OTA_051_all_1907311835_5de64c.zip");
                    try (final java.io.BufferedOutputStream bout = new BufferedOutputStream(fos, 1024)) {
                        byte[] data = new byte[1024];
                        long downloadedFileSize = 0;
                        int x1 = 0;
                        while ((x1 = in.read(data, 0, 1024)) >= 0) {
                            downloadedFileSize += x1;
                            // calculate progress
                            final int currentProgress = (int) ((((double)downloadedFileSize) / ((double)completeFileSize)) * 100000d);
                            // update progress bar
                            jProgressBar.setString("Calculando tamaño del archivo...");
                            SwingUtilities.invokeLater(() -> {
                                jProgressBar.setString("Descargando OnePlus5Oxygen_23_OTA_051_all_1907311835_5de64c: \n" +currentProgress+ " Bytes");
                                jProgressBar.setValue(currentProgress);
                            });
                            bout.write(data, 0, x1);
                        }
                    }
                    frame.setVisible(false);
                }
            }catch (FileNotFoundException e) {
            }catch (IOException ex) {
                Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
            }
        };
        new Thread(updatethread).start();
    
 }
           
        }catch (IOException e) {

        jProgressBar.setString("Error no se pudo establecer conexion con el servidor.");
        jFormattedTextField1.setText("Error no se pudo establecer conexion con el servidor.");
       
        }finally{
            try { 
            sock.close(); 
        }catch (IOException e) { 
            }
        } 
    }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {
            dirToOpen = new File("img/recovery");
            desktop.open(dirToOpen);
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(null,"Error: Carpeta " +dirToOpen+ " no encontrada");
        } catch (IOException ex) {
            Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {
            dirToOpen = new File("img/twrp");
            desktop.open(dirToOpen);
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(null,"Error: Carpeta " +dirToOpen+ " no encontrada");
        } catch (IOException ex) {
            Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {
            dirToOpen = new File("img/firmware");
            desktop.open(dirToOpen);
        } catch (IllegalArgumentException iae) {
            JOptionPane.showMessageDialog(null,"Error: Carpeta " +dirToOpen+ " no encontrada");
        } catch (IOException ex) {
            Logger.getLogger(OPVisual.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        JOptionPane.showMessageDialog(null, "Opción no disponible...");     
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
Runtime runtime = Runtime.getRuntime();
try {
    Process p1 = runtime.exec("cmd /c start .settings\\bin\\killall.bat");
    InputStream is = p1.getInputStream();
    int i = 0;
    while( (i = is.read() ) != -1) {
       JOptionPane.showMessageDialog(null, +i);
    }
} catch(IOException ioException) {
    JOptionPane.showMessageDialog(null, ioException.getMessage());
}
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
try {
    Runtime.getRuntime().exec(new String[] { "c:\\Windows\\notepad.exe", ".settings\\others\\bugs.txt" });
} catch (IOException e) {
} 
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
try {
    Runtime.getRuntime().exec(new String[] { "c:\\Windows\\notepad.exe", ".settings\\LICENSE.txt" });
} catch (IOException e) {
} 
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OPVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new OPVisual().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    // End of variables declaration//GEN-END:variables

}
